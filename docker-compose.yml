services:
  fastapi:
    build: .
    container_name: promconcept_fastapi_app
    restart: always
    depends_on:
      - test_postgres
      - postgres
      - redis
    ports:
      - "${PORT}:${PORT}"
    env_file:
      - .env
    environment:
      POSTGRES_HOST: postgres
      TEST_POSTGRES_HOST: test_postgres
      REDIS_HOST: redis
      PYTHONUNBUFFERED: 1
      WATCHFILES_FORCE_POLLING: true
    volumes:
      - .:/app
    networks:
      - prom_concept_network

  postgres:
    image: postgres:15
    container_name: promconcept_postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGPORT: ${POSTGRES_PORT}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - prom_concept_network

  test_postgres:
    image: postgres:15
    container_name: promconcept_test_postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${TEST_POSTGRES_USER}
      POSTGRES_PASSWORD: ${TEST_POSTGRES_PASSWORD}
      POSTGRES_DB: ${TEST_POSTGRES_DB}
      PGPORT: ${TEST_POSTGRES_PORT}
    ports:
      - "${TEST_POSTGRES_PORT}:${TEST_POSTGRES_PORT}"
    networks:
      - prom_concept_network

  redis:
    image: redis:7
    container_name: promconcept_redis_cache
    restart: always
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis_data:/data
    networks:
      - prom_concept_network

volumes:
  postgres_data:
  redis_data:

networks:
  prom_concept_network:
    driver: bridge
